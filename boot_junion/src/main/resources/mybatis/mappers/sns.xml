<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boot.DAO.SNSDAO">
    
    <select id="snsList" resultType="com.boot.DTO.SNSDTO">
		SELECT 
		    s.sns_num,
		    s.login_email,
		    s.user_type,
		    s.sns_title,
		    s.sns_content,
		    s.sns_date,
		    CASE
		        WHEN s.user_type = 1 THEN u.user_name
		        WHEN s.user_type = 2 THEN c.com_name
		        ELSE NULL
		    END AS sns_name
		FROM 
		    sns_tb s
		LEFT JOIN 
		    user_tb u ON s.login_email = u.user_email AND s.user_type = 1
		LEFT JOIN 
		    com_tb c ON s.login_email = c.com_email AND s.user_type = 2 order by s.sns_date desc;
    </select>

	<select id="snsFollowPostList" resultType="com.boot.DTO.SNSDTO">
	    SELECT 
	        s.sns_num,
	        s.login_email,
	        s.user_type,
	        s.sns_title,
	        s.sns_content,
	        s.sns_date,
	        CASE
	            WHEN s.user_type = 1 THEN u.user_name
	            WHEN s.user_type = 2 THEN c.com_name
	            ELSE NULL
	        END AS sns_name
	    FROM 
	        sns_tb s
	    LEFT JOIN 
	        user_tb u ON s.login_email = u.user_email AND s.user_type = 1
	    LEFT JOIN 
	        com_tb c ON s.login_email = c.com_email AND s.user_type = 2
	    INNER JOIN 
	        sns_follow_tb f ON s.login_email = f.follow_email
	    WHERE 
	        f.login_email = #{login_email}
	    ORDER BY 
	        s.sns_date DESC;
	</select>

    
    <select id="findBySNSNum" resultType="com.boot.DTO.SNSDTO">
    	select sns_num, login_email, user_type, sns_title, sns_content, sns_date
    	from sns_tb 
    	where sns_num = #{sns_num}
    </select>
    
<!--게시글 작성-->
    <insert id="snsWrite" parameterType="com.boot.DTO.SNSDTO" useGeneratedKeys="true" keyProperty="sns_num"> 
		insert into sns_tb (login_email, user_type, sns_title, sns_content, sns_date) 
		values (#{login_email}, #{user_type}, #{sns_title}, #{sns_content}, now())
    </insert>
    
<!--댓글 작성-->
    <insert id="snsCommentWrite" parameterType="com.boot.DTO.SNSDTO" useGeneratedKeys="true" keyProperty="sns_comment_num">
		insert into sns_comment_tb (sns_num, login_email, user_type, sns_comment_content, sns_comment_date) 
		values (#{sns_num}, #{login_email}, #{user_type}, #{sns_comment_content}, now())
    </insert>
    
    <select id="snsCommentList" parameterType="int" resultType="com.boot.DTO.SNSDTO">
	    SELECT
		    s.sns_comment_num,
		    s.sns_num,
		    s.login_email AS sns_email,
		    s.user_type,
		    s.sns_comment_content,
		    s.sns_comment_date,
		    CASE
		        WHEN s.user_type = 1 THEN u.user_name
		        WHEN s.user_type = 2 THEN c.com_name
		        ELSE NULL
		    END AS sns_name
		FROM
		    sns_comment_tb s
		LEFT JOIN user_tb u ON s.login_email = u.user_email AND s.user_type = 1
		LEFT JOIN com_tb c ON s.login_email = c.com_email AND s.user_type = 2
		WHERE s.sns_num = #{sns_num}
		ORDER BY s.sns_comment_date DESC;
	</select>
	
	<select id="getSnsName" resultType="com.boot.DTO.SNSDTO">
		SELECT 
		    CASE 
		        WHEN #{user_type} = 1 THEN 
		            (SELECT user_name FROM user_tb WHERE user_email = #{login_email})
		        WHEN #{user_type} = 2 THEN 
		            (SELECT com_name FROM com_tb WHERE com_email = #{login_email})
		    END AS sns_name;

	</select>

    
<!--검색-->
    <select id="searchName" resultType="com.boot.DTO.SNSDTO">

		    SELECT 
		        u.user_email AS sns_email,
		        u.user_name AS sns_name,
		        '1' AS user_type
		    FROM 
		        user_tb u
		    WHERE 
		        u.user_name LIKE CONCAT('%', #{searchName}, '%')
		    
		    UNION ALL
		    
		    SELECT 
		        c.com_email AS sns_email,
		        c.com_name AS sns_name,
		        '2' AS user_type
		    FROM 
		        com_tb c
		    WHERE 
		        c.com_name LIKE CONCAT('%', #{searchName}, '%');
		       
	</select>


</mapper>












